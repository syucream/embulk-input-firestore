plugins {
    id 'scala'
    id 'com.github.jruby-gradle.base' version '1.6.0'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}
import com.github.jrubygradle.JRubyExec

configurations {
    provided
}

repositories {
    mavenCentral()
    jcenter()
}

// Relocate Guava packages since it's incompatible with Guava's version from Embulk
shadowJar {
    classifier 'shadow'
    exclude 'org/embulk/plugin/**'

    dependencies {
        // include dependency('com.google.guava:guava')
        // include dependency('com.google.cloud:google-cloud-firestore')
        include 'com.google.guava:guava'
        include 'com.google.cloud:google-cloud-firestore'
    }

    relocate 'com.google.common', 'relocated.com.google.common'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'org.scala-lang:scala-library:2.12.3'

    compile 'org.embulk:embulk-core:0.9.12'
    provided 'org.embulk:embulk-core:0.9.12'

    compile 'com.google.cloud:google-cloud-firestore:1.28.0'

    /*
    compile "com.google.guava:guava:28.0-android"
    compile ("org.embulk:embulk-core:0.9.12") {
        exclude group: 'com.google.guava'
    }
    compile ("com.google.cloud:google-cloud-firestore:1.28.0") {
        exclude group: 'com.google.guava'
    }
    */

    // configurations.all {
    //     resolutionStrategy.force "com.google.guava:guava:28.0-jre"
    //     resolutionStrategy.force "com.google.guava:guava:18.0"
    // }

    // compile ("com.google.cloud:google-cloud-firestore:1.28.0") {
    //     exclude group: 'com.google.guava'
    // }

    // compile "com.google.guava:guava:18.0"
    // compile "com.google.guava:guava:19.0"
    // compile "io.grpc:grpc-api:1.16.0"
    // compile ("io.grpc:grpc-api:1.24.0") {
    //     exclude group: 'com.google.guava'
    // }

    // compile "com.google.firebase:firebase-admin:6.10.0"
    // compile ("com.google.firebase:firebase-admin:6.10.0") {
    //     exclude group: 'com.google.guava'
    // }

    // testCompile 'org.embulk:embulk-test:0.9.12'
}

task classpath(type: Copy, dependsOn: ['jar', 'shadowJar']) {
    doFirst { file('classpath').deleteDir() }
    // from (configurations.runtime - configurations.provided + files(jar.archiveFile))

    from (configurations.runtime
            - configurations.provided
            + configurations.shadow
            // - files(shadowJar.getIncludedDependencies())
            + files(shadowJar.archiveFile)
            + files(jar.archiveFile))

    into 'classpath'
}
clean { delete 'classpath' }

task gem(type: JRubyExec, dependsOn: ['build', 'gemspec', 'classpath']) {
    script 'gem'
    scriptArgs 'build', 'build/gemspec'
    doLast { ant.move(file: "${project.name}-${project.version}.gem", todir: 'pkg') }
}

task gemspec {
    doLast {
        file('build').mkdirs()
        file('build/gemspec').write($/
Gem::Specification.new do |spec|
    spec.name          = "${project.name}"
    spec.version       = "${project.version}"
    spec.authors       = ["Ryo Okubo"]
    spec.summary       = %[Cloud Firestoreinput plugin for Embulk]
    spec.description   = %[Selects records from a table.]
    spec.email         = ["syucream@gmail.com"]
    spec.licenses      = ["Apache-2.0"]
    spec.homepage      = "https://github.com/syucream/embulk-input-firestore"

    spec.files         = `git ls-files`.split("\n") + Dir["classpath/*.jar"]
    spec.test_files    = spec.files.grep(%r"^(test|spec)/")
    spec.require_paths = ["lib"]
end
/$)
    }
}
